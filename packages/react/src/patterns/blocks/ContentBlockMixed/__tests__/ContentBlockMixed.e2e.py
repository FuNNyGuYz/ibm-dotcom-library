from selenium import webdriver
from dotenv import load_dotenv
load_dotenv()
import unittest
import time
import os

from selenium.common.exceptions import NoSuchElementException
from selenium.webdriver.support.select import Select

# Setup Driver
url = os.environ.get('SELENIUM_URL') or "https://ibmdotcom-react-canary.mybluemix.net/"
driver = webdriver.Chrome()
driver.maximize_window()
driver.refresh()
driver.get(url)

time.sleep(11)
element = driver.find_element_by_id("explorerpatterns-blocks-contentblockmixed")
driver.execute_script("arguments[0].scrollIntoView();", element)
element.click()
#print("Content block mixed Selected")
time.sleep(2)
driver.find_element_by_id("patterns-blocks-contentblockmixed--with-aside-elements").click()
print("Content block mixed with aside Selected")
parenthandle = driver.current_window_handle
time.sleep(4)
driver.switch_to_frame("storybook-preview-iframe")
time.sleep(2)
contentBlockMixed_topSpacing = driver.find_element_by_css_selector(".bx--content-block").value_of_css_property("padding-top")
print("Pixel value at top is :" + contentBlockMixed_topSpacing)
contentBlockMixed_bottomSpacing = driver.find_element_by_css_selector(".bx--content-block").value_of_css_property("padding-bottom")
print("Pixel value at bottom is :" + contentBlockMixed_bottomSpacing)
time.sleep(2)
contentBlockMixed_bottomSpacing = driver.find_element_by_css_selector(".bx--content-block__heading").value_of_css_property("margin-bottom")
print("Pixel value btw heading & copy is :" + contentBlockMixed_bottomSpacing)
contentBlockMixed_topSpacing = driver.find_element_by_css_selector(".bx--content-group").value_of_css_property("margin-top")
print("Pixel value at Pictogram top is :" + contentBlockMixed_topSpacing)
contentBlockMixed_bottomSpacing = driver.find_element_by_css_selector(".bx--content-group").value_of_css_property("margin-bottom")
print("Pixel value at Pictogram bottom is :" + contentBlockMixed_bottomSpacing)
time.sleep(2)
contentBlockMixed_topSpacing = driver.find_element_by_css_selector(".bx--content-item").value_of_css_property("margin-top")
print("Pixel value btw pictogram item height is :" + contentBlockMixed_topSpacing)
contentBlockMixed_bottomSpacing = driver.find_element_by_css_selector(".bx--content-item").value_of_css_property("margin-bottom")
print("Pixel value btw pictogram item width is :" + contentBlockMixed_bottomSpacing)
time.sleep(2)
contentBlockMixed_icon = driver.find_element_by_css_selector(".bx--pictogram-item__pictogram").value_of_css_property("height")
print("Pixel value btw pictogram item top is :" + contentBlockMixed_icon)
contentBlockMixed_icon1 = driver.find_element_by_css_selector(".bx--pictogram-item__pictogram").value_of_css_property("width")
print("Pixel value btw pictogram item bottom is :" + contentBlockMixed_icon1)
contentBlockMixed_bottomSpacing = driver.find_element_by_css_selector(".bx--content-item__copy p").value_of_css_property("margin-bottom")
print("Pixel value btw pictogram item copy & link is :" + contentBlockMixed_bottomSpacing)
time.sleep(2)
contentBlockMixed_bottomSpacing = driver.find_element_by_css_selector(".bx--content-group__title").value_of_css_property("margin-bottom")
print("Pixel common value btw heading & copy is :" + contentBlockMixed_bottomSpacing)
contentBlockMixed_cardPadding = driver.find_element_by_css_selector(".bx--card__wrapper").value_of_css_property("padding")
print("Pixel value for card padding top is :" + contentBlockMixed_cardPadding)
time.sleep(2)
driver.switch_to_default_content()
driver.find_element_by_xpath("//*[contains(@title, 'Open canvas in new tab')]").click()
print("new tab opened")
time.sleep(5)
handles = driver.window_handles
for handle in handles:
    if handle not in parenthandle:
        driver.switch_to.window(handle)
        driver.find_element_by_xpath("(//div[@class='bx--card__copy'])[2]").click()
        print ("Card clicked")
        time.sleep(4)
        driver.execute_script("window.history.go(-1)")
        time.sleep(4)
        driver.find_element_by_xpath("(//a[@class='bx--link bx--link-with-icon'])[1]").click()
        print ("Picto link clicked")
        time.sleep(4)
        driver.execute_script("window.history.go(-1)")
        time.sleep(4)
        driver.find_element_by_xpath("(//div[@class='bx--card__wrapper'])[5]").click()
        print ("CTA card clicked")
        time.sleep(4)
        driver.execute_script("window.history.go(-1)")
        time.sleep(4)
        driver.find_element_by_xpath("(//div[@class='bx--card__footer'])[6]")
        print ("Aside element clicked")
        time.sleep(2)
        driver.close()
        break
driver.switch_to.window(parenthandle)
time.sleep(4)
Sel_CTAtype = Select(driver.find_element_by_name('CTA type'))
Sel_CTAtype.select_by_visible_text("external")
time.sleep(2)
print ("CTA type changed to external")
driver.find_element_by_xpath("//*[contains(@title, 'Go full screen')]").click()
#print("Go full screen")
time.sleep(5)
driver.switch_to_frame("storybook-preview-iframe")
driver.find_element_by_xpath("(//div[@class='bx--card__wrapper'])[5]").click()
print ("clicked on external card")
time.sleep(2)
driver.close()
